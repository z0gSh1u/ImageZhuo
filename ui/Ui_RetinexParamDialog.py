# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'F:\ImageZhuo\ui\RetinexParamDialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_RetinexParamDialog(object):
    def setupUi(self, RetinexParamDialog):
        RetinexParamDialog.setObjectName("RetinexParamDialog")
        RetinexParamDialog.resize(357, 284)
        RetinexParamDialog.setSizeGripEnabled(True)
        self.gridLayoutWidget = QtWidgets.QWidget(RetinexParamDialog)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 10, 341, 261))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.spin_D0 = QtWidgets.QSpinBox(self.gridLayoutWidget)
        self.spin_D0.setMinimum(1)
        self.spin_D0.setMaximum(100)
        self.spin_D0.setProperty("value", 40)
        self.spin_D0.setObjectName("spin_D0")
        self.gridLayout.addWidget(self.spin_D0, 3, 1, 1, 1)
        self.spin_gammaL = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget)
        self.spin_gammaL.setMaximum(1.0)
        self.spin_gammaL.setSingleStep(0.1)
        self.spin_gammaL.setProperty("value", 0.8)
        self.spin_gammaL.setObjectName("spin_gammaL")
        self.gridLayout.addWidget(self.spin_gammaL, 1, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.spin_gammaH = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget)
        self.spin_gammaH.setMinimum(1.0)
        self.spin_gammaH.setMaximum(5.0)
        self.spin_gammaH.setSingleStep(0.1)
        self.spin_gammaH.setProperty("value", 1.8)
        self.spin_gammaH.setObjectName("spin_gammaH")
        self.gridLayout.addWidget(self.spin_gammaH, 0, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 2, 0, 1, 1)
        self.spin_c = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget)
        self.spin_c.setMinimum(0.1)
        self.spin_c.setMaximum(5.0)
        self.spin_c.setSingleStep(0.1)
        self.spin_c.setProperty("value", 1.0)
        self.spin_c.setObjectName("spin_c")
        self.gridLayout.addWidget(self.spin_c, 2, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 1, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 3, 0, 1, 1)
        self.btn_done = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.btn_done.setObjectName("btn_done")
        self.gridLayout.addWidget(self.btn_done, 4, 1, 1, 1)

        self.retranslateUi(RetinexParamDialog)
        QtCore.QMetaObject.connectSlotsByName(RetinexParamDialog)

    def retranslateUi(self, RetinexParamDialog):
        _translate = QtCore.QCoreApplication.translate
        RetinexParamDialog.setWindowTitle(_translate("RetinexParamDialog", "Retinex 参数询问 / ImageZhuo"))
        self.label.setText(_translate("RetinexParamDialog", "高频增益系数 GammaH"))
        self.label_3.setText(_translate("RetinexParamDialog", "坡度参数 c"))
        self.label_2.setText(_translate("RetinexParamDialog", "低频减益系数 GammaL"))
        self.label_4.setText(_translate("RetinexParamDialog", "截止频率 D0"))
        self.btn_done.setText(_translate("RetinexParamDialog", "确定"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    RetinexParamDialog = QtWidgets.QDialog()
    ui = Ui_RetinexParamDialog()
    ui.setupUi(RetinexParamDialog)
    RetinexParamDialog.show()
    sys.exit(app.exec_())
